version: '3.7'

services:

  node:
    container_name: nodeapp
    image: nodeapp
    build:                            # especificamos el build cuando es una imagen que vamos a construir (no pull)
      context: .                      # ubicación del dockerfile para esta imagen
      dockerfile: node.dockerfile     # nombre del dockerfile (por defecto siempre será Dockerfile)
      args:                           # environment variables definidas en el dockerfile (PACKAGES) a las que asignamos valor (nano wget curl)
        PACKAGES: "nano wget curl"
    ports:
      - "3000:3000"
    networks:
      - nodeapp-network
    volumes:
      - ./logs:/var/www/logs
    environment:
      - NODE_ENV=production
      - APP_VERSION=1.0
    depends_on: 
      - mongodb # asegura que mongodb arranca primero, pero no asegura que estará disponible para aceptar conexiones
      
  mongodb:
    container_name: mongodb
    image: mongo  # en este caso, como no tenemos build, lo que hará es buscar una imagen llamada mongo en nuestro repositorio local, y si no la encuentra, irá a nuestro repositorio remoto por defecto (en este caso docker hub)
    networks:
      - nodeapp-network

networks:
  nodeapp-network:
    driver: bridge

# docker-compose build  Crea las imágenes para todos los servicios de nuestro docker-compose
# docker-compose up     El equivalente a docker run. Corre todos los componentes definidos en el docker-compose
# docker-compose down   Para todos los contenedores y los borra